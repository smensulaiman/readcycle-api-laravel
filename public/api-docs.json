{
  "openapi": "3.0.0",
  "info": {
    "title": "ReadCycle API",
    "description": "API documentation for ReadCycle - Book sharing platform for students in Bangladesh",
    "version": "1.0.0",
    "contact": {
      "name": "ReadCycle Development Team",
      "email": "support@readcycle.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "ReadCycle API Server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "university_name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Mohammad Ibrahim"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "ibrahim@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                  },
                  "university_name": {
                    "type": "string",
                    "example": "North Western University, Khulna"
                  },
                  "department": {
                    "type": "string",
                    "example": "CSE"
                  },
                  "year": {
                    "type": "string",
                    "example": "3rd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user and get access token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "ibrahim@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "example": "1|abcdef123456..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User logout",
        "description": "Logout user and revoke token",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "description": "Retrieve all books with pagination",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Books retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Books retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Book"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Books"],
        "summary": "Create a new book",
        "description": "Add a new book to the platform",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["category_id", "title"],
                "properties": {
                  "category_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "পথের পাঁচালী"
                  },
                  "description": {
                    "type": "string",
                    "example": "A classic Bengali novel"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Book cover image"
                  },
                  "photo_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/book-cover.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Book added successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Book"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": ["Books"],
        "summary": "Get a specific book",
        "description": "Retrieve details of a specific book",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Book ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Book retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Book"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update a book",
        "description": "Update book information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Book ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "category_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "পথের পাঁচালী"
                  },
                  "description": {
                    "type": "string",
                    "example": "A classic Bengali novel"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "New book cover image"
                  },
                  "photo_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/new-book-cover.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Book updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Book"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized to update this book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book",
        "description": "Remove a book from the platform",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Book ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Book deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized to delete this book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "description": "Retrieve all book categories",
        "security": [],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Categories retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Create a new category",
        "description": "Add a new book category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "উপন্যাস"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Category created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get a specific category",
        "description": "Retrieve details of a specific category with books",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Category ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Category retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/swaps": {
      "get": {
        "tags": ["Swaps"],
        "summary": "Get user's swaps",
        "description": "Retrieve all swaps for the authenticated user",
        "responses": {
          "200": {
            "description": "Swaps retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Swaps retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Swap"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Swaps"],
        "summary": "Create a swap request",
        "description": "Request to swap books with another user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["book_requested_id", "book_offered_id"],
                "properties": {
                  "book_requested_id": {
                    "type": "integer",
                    "description": "ID of the book being requested",
                    "example": 1
                  },
                  "book_offered_id": {
                    "type": "integer",
                    "description": "ID of the book being offered",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Swap request created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Swap request sent successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Swap"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/swaps/{id}": {
      "get": {
        "tags": ["Swaps"],
        "summary": "Get a specific swap",
        "description": "Retrieve details of a specific swap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Swap ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Swap retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Swap retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Swap"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/swaps/update-status": {
      "post": {
        "tags": ["Swaps"],
        "summary": "Update swap status",
        "description": "Accept or decline a swap request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["swap_id", "status"],
                "properties": {
                  "swap_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "status": {
                    "type": "string",
                    "enum": ["accepted", "declined"],
                    "example": "accepted"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Swap status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Swap request accepted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve all users with pagination",
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Users retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a specific user",
        "description": "Retrieve details of a specific user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mohammad Ibrahim"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "ibrahim@gmail.com"
          },
          "university_name": {
            "type": "string",
            "example": "North Western University, Khulna"
          },
          "department": {
            "type": "string",
            "example": "CSE"
          },
          "year": {
            "type": "string",
            "example": "3rd"
          },
          "profile_picture": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/profile.jpg"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "উপন্যাস"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "books": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "category_id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "পথের পাঁচালী"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "A classic Bengali novel"
          },
          "photo_path": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/book-cover.jpg"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        }
      },
      "Swap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "book_requested_id": {
            "type": "integer",
            "example": 1
          },
          "book_offered_id": {
            "type": "integer",
            "example": 2
          },
          "requester_id": {
            "type": "integer",
            "example": 1
          },
          "status": {
            "type": "string",
            "enum": ["pending", "accepted", "declined"],
            "example": "pending"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "bookRequested": {
            "$ref": "#/components/schemas/Book"
          },
          "bookOffered": {
            "$ref": "#/components/schemas/Book"
          },
          "requester": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Validation failed"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
